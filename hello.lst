                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (Jul 10 2011) (Mac OS X x86_64)
                              4 ; This file was generated Fri Jul 22 19:30:43 2011
                              5 ;--------------------------------------------------------
                              6 	.module hello
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _d_asciitime
                             14 	.globl _d_datebuf
                             15 	.globl _kbdstate2
                             16 	.globl _kbdstate1
                             17 	.globl _saveprinstat
                             18 	.globl _diagnostics
                             19 	.globl _initstack
                             20 	.globl _criticalsp
                             21 	.globl _criticalpc
                             22 	.globl _nmichksums
                             23 	.globl _nmimagic
                             24 	.globl _savingcontext
                             25 	.globl _savecritsp
                             26 	.globl _savecritpc
                             27 	.globl _savemmu3
                             28 	.globl _savemmu2
                             29 	.globl _savemmu1
                             30 	.globl _savemmu0
                             31 	.globl _savehldash
                             32 	.globl _savededash
                             33 	.globl _savebcdash
                             34 	.globl _saveafdash
                             35 	.globl _savesp
                             36 	.globl _savepc
                             37 	.globl _saveiy
                             38 	.globl _saveix
                             39 	.globl _savehl
                             40 	.globl _savede
                             41 	.globl _savebc
                             42 	.globl _saveaf
                             43 	.globl ___savehl
                             44 	.globl ___saveaf
                             45 	.globl ___savepearlmmu
                             46 	.globl _gotcontext
                             47 	.globl _copyofmmu3
                             48 	.globl _copyofmmu2
                             49 	.globl _copyofmmu1
                             50 	.globl _copyofmmu0
                             51 ;--------------------------------------------------------
                             52 ; special function registers
                             53 ;--------------------------------------------------------
                    0010     54 _MMU0	=	0x0010
                    0011     55 _MMU1	=	0x0011
                    0050     56 _SNDCHAL	=	0x0050
                    0051     57 _SNDCHAH	=	0x0051
                             58 ;--------------------------------------------------------
                             59 ;  ram data
                             60 ;--------------------------------------------------------
                             61 	.area _DATA
                    B000     62 _copyofmmu0	=	0xb000
                    B001     63 _copyofmmu1	=	0xb001
                    B002     64 _copyofmmu2	=	0xb002
                    B003     65 _copyofmmu3	=	0xb003
                    B004     66 _gotcontext	=	0xb004
                    B005     67 ___savepearlmmu	=	0xb005
                    B006     68 ___saveaf	=	0xb006
                    B008     69 ___savehl	=	0xb008
                    B00A     70 _saveaf	=	0xb00a
                    B00C     71 _savebc	=	0xb00c
                    B00E     72 _savede	=	0xb00e
                    B010     73 _savehl	=	0xb010
                    B012     74 _saveix	=	0xb012
                    B014     75 _saveiy	=	0xb014
                    B016     76 _savepc	=	0xb016
                    B018     77 _savesp	=	0xb018
                    B01A     78 _saveafdash	=	0xb01a
                    B01C     79 _savebcdash	=	0xb01c
                    B01E     80 _savededash	=	0xb01e
                    B020     81 _savehldash	=	0xb020
                    B022     82 _savemmu0	=	0xb022
                    B023     83 _savemmu1	=	0xb023
                    B024     84 _savemmu2	=	0xb024
                    B025     85 _savemmu3	=	0xb025
                    B026     86 _savecritpc	=	0xb026
                    B028     87 _savecritsp	=	0xb028
                    B02A     88 _savingcontext	=	0xb02a
                    B02B     89 _nmimagic	=	0xb02b
                    B02F     90 _nmichksums	=	0xb02f
                    B037     91 _criticalpc	=	0xb037
                    B039     92 _criticalsp	=	0xb039
                    B03B     93 _initstack	=	0xb03b
                    B08B     94 _diagnostics	=	0xb08b
                    B08C     95 _saveprinstat	=	0xb08c
                    B08D     96 _kbdstate1	=	0xb08d
                    B097     97 _kbdstate2	=	0xb097
                    B150     98 _d_datebuf	=	0xb150
                    B162     99 _d_asciitime	=	0xb162
                            100 ;--------------------------------------------------------
                            101 ; overlayable items in  ram 
                            102 ;--------------------------------------------------------
                            103 	.area _OVERLAY
                            104 ;--------------------------------------------------------
                            105 ; external initialized ram data
                            106 ;--------------------------------------------------------
                            107 ;--------------------------------------------------------
                            108 ; global & static initialisations
                            109 ;--------------------------------------------------------
                            110 	.area _HOME
                            111 	.area _GSINIT
                            112 	.area _GSFINAL
                            113 	.area _GSINIT
                            114 ;--------------------------------------------------------
                            115 ; Home
                            116 ;--------------------------------------------------------
                            117 	.area _HOME
                            118 	.area _HOME
                            119 ;--------------------------------------------------------
                            120 ; code
                            121 ;--------------------------------------------------------
                            122 	.area _CODE
                            123 ;hello.c:10: int main(void)
                            124 ;	---------------------------------
                            125 ; Function main
                            126 ; ---------------------------------
   0000                     127 _main_start::
   0000                     128 _main:
   0000 DD E5               129 	push	ix
   0002 DD 21 00 00         130 	ld	ix,#0
   0006 DD 39               131 	add	ix,sp
   0008 21 EA FF            132 	ld	hl,#-22
   000B 39                  133 	add	hl,sp
   000C F9                  134 	ld	sp,hl
                            135 ;hello.c:15: eingabe[0] = 0; 
   000D 21 00 00            136 	ld	hl,#0x0000
   0010 39                  137 	add	hl,sp
   0011 4D                  138 	ld	c,l
   0012 44                  139 	ld	b,h
   0013 36 00               140 	ld	(hl),#0x00
                            141 ;hello.c:16: firmver=padgetversion();
   0015 C5                  142 	push	bc
   0016 CDr00s00            143 	call	_padgetversion
   0019 C1                  144 	pop	bc
   001A DD 75 FE            145 	ld	-2 (ix),l
   001D DD 74 FF            146 	ld	-1 (ix),h
                            147 ;hello.c:18: SNDCHAL = 50;
   0020 3E 32               148 	ld	a,#0x32
   0022 D3 50               149 	out	(_SNDCHAL),a
                            150 ;hello.c:19: SNDCHAH = 30;
   0024 3E 1E               151 	ld	a,#0x1E
   0026 D3 51               152 	out	(_SNDCHAH),a
                            153 ;hello.c:21: printf("Current Time: %s\n", d_asciitime);
   0028 C5                  154 	push	bc
   0029 21 62 B1            155 	ld	hl,#_d_asciitime
   002C E5                  156 	push	hl
   002D 21rA6s00            157 	ld	hl,#__str_0
   0030 E5                  158 	push	hl
   0031 CDr00s00            159 	call	_printf
   0034 F1                  160 	pop	af
   0035 21 01 01            161 	ld	hl,#0x0101
   0038 E3                  162 	ex	(sp),hl
   0039 CDr00s00            163 	call	_txtsetcursor
   003C 21 26 00            164 	ld	hl,#0x0026
   003F E3                  165 	ex	(sp),hl
   0040 21rB8s00            166 	ld	hl,#__str_1
   0043 E5                  167 	push	hl
   0044 CDr00s00            168 	call	_printf
   0047 F1                  169 	pop	af
   0048 F1                  170 	pop	af
   0049 CDr00s00            171 	call	_txtboldon
   004C C1                  172 	pop	bc
                            173 ;hello.c:25: printf("Your firmware version is: %i, mmu0 is %02X\n", firmver,copyofmmu0);
   004D 21 00 B0            174 	ld	hl,#_copyofmmu0 + 0
   0050 5E                  175 	ld	e,(hl)
   0051 16 00               176 	ld	d,#0x00
   0053 C5                  177 	push	bc
   0054 D5                  178 	push	de
   0055 DD 6E FE            179 	ld	l,-2 (ix)
   0058 DD 66 FF            180 	ld	h,-1 (ix)
   005B E5                  181 	push	hl
   005C 21rDCs00            182 	ld	hl,#__str_2
   005F E5                  183 	push	hl
   0060 CDr00s00            184 	call	_printf
   0063 F1                  185 	pop	af
   0064 F1                  186 	pop	af
   0065 F1                  187 	pop	af
   0066 CDr00s00            188 	call	_txtboldoff
   0069 21r08s01            189 	ld	hl,#__str_3
   006C E5                  190 	push	hl
   006D CDr00s00            191 	call	_printf
   0070 F1                  192 	pop	af
   0071 C1                  193 	pop	bc
                            194 ;hello.c:28: if (editbuf(eingabe, 20, EDITBUF_DOTTY))
   0072 C5                  195 	push	bc
   0073 21 14 40            196 	ld	hl,#0x4014
   0076 E5                  197 	push	hl
   0077 C5                  198 	push	bc
   0078 CDr00s00            199 	call	_editbuf
   007B F1                  200 	pop	af
   007C F1                  201 	pop	af
   007D C1                  202 	pop	bc
   007E AF                  203 	xor	a,a
   007F B5                  204 	or	a,l
   0080 28 0C               205 	jr	Z,00102$
                            206 ;hello.c:30: printf("\nYour name is %s\n", eingabe);
   0082 C5                  207 	push	bc
   0083 21r20s01            208 	ld	hl,#__str_4
   0086 E5                  209 	push	hl
   0087 CDr00s00            210 	call	_printf
   008A F1                  211 	pop	af
   008B F1                  212 	pop	af
   008C 18 08               213 	jr	00103$
   008E                     214 00102$:
                            215 ;hello.c:34: printf("\nOk, you're to shy!\n");
   008E 21r32s01            216 	ld	hl,#__str_5
   0091 E5                  217 	push	hl
   0092 CDr00s00            218 	call	_printf
   0095 F1                  219 	pop	af
   0096                     220 00103$:
                            221 ;hello.c:37: printf("\nPress any key to quit");
   0096 21r47s01            222 	ld	hl,#__str_6
   0099 E5                  223 	push	hl
   009A CDr00s00            224 	call	_printf
   009D F1                  225 	pop	af
                            226 ;hello.c:38: getchar();
   009E CDr00s00            227 	call	_getchar
   00A1 DD F9               228 	ld	sp,ix
   00A3 DD E1               229 	pop	ix
   00A5 C9                  230 	ret
   00A6                     231 _main_end::
   00A6                     232 __str_0:
   00A6 43 75 72 72 65 6E   233 	.ascii "Current Time: %s"
        74 20 54 69 6D 65
        3A 20 25 73
   00B6 0A                  234 	.db 0x0A
   00B7 00                  235 	.db 0x00
   00B8                     236 __str_1:
   00B8 43 20 6F 6E 20 74   237 	.ascii "C on the Amstrad Notepad, Build %i"
        68 65 20 41 6D 73
        74 72 61 64 20 4E
        6F 74 65 70 61 64
        2C 20 42 75 69 6C
        64 20 25 69
   00DA 0A                  238 	.db 0x0A
   00DB 00                  239 	.db 0x00
   00DC                     240 __str_2:
   00DC 59 6F 75 72 20 66   241 	.ascii "Your firmware version is: %i, mmu0 is %02X"
        69 72 6D 77 61 72
        65 20 76 65 72 73
        69 6F 6E 20 69 73
        3A 20 25 69 2C 20
        6D 6D 75 30 20 69
        73 20 25 30 32 58
   0106 0A                  242 	.db 0x0A
   0107 00                  243 	.db 0x00
   0108                     244 __str_3:
   0108 50 6C 65 61 73 65   245 	.ascii "Please enter your name:"
        20 65 6E 74 65 72
        20 79 6F 75 72 20
        6E 61 6D 65 3A
   011F 00                  246 	.db 0x00
   0120                     247 __str_4:
   0120 0A                  248 	.db 0x0A
   0121 59 6F 75 72 20 6E   249 	.ascii "Your name is %s"
        61 6D 65 20 69 73
        20 25 73
   0130 0A                  250 	.db 0x0A
   0131 00                  251 	.db 0x00
   0132                     252 __str_5:
   0132 0A                  253 	.db 0x0A
   0133 4F 6B 2C 20 79 6F   254 	.ascii "Ok, you're to shy!"
        75 27 72 65 20 74
        6F 20 73 68 79 21
   0145 0A                  255 	.db 0x0A
   0146 00                  256 	.db 0x00
   0147                     257 __str_6:
   0147 0A                  258 	.db 0x0A
   0148 50 72 65 73 73 20   259 	.ascii "Press any key to quit"
        61 6E 79 20 6B 65
        79 20 74 6F 20 71
        75 69 74
   015D 00                  260 	.db 0x00
                            261 	.area _CODE
                            262 	.area _CABS
